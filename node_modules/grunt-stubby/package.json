{
  "_args": [
    [
      "grunt-stubby@^0.1.4",
      "/Users/Chau_Bin/Development/code/angular-ngroute-lab-v-000"
    ]
  ],
  "_from": "grunt-stubby@>=0.1.4 <0.2.0",
  "_id": "grunt-stubby@0.1.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/grunt-stubby",
  "_npmUser": {
    "email": "tomas@aparicio.me",
    "name": "h2non"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {
    "async": "1.5.2",
    "cloneextend": "0.0.3",
    "ejs": "2.4.2",
    "isutf8": "2.0.0",
    "js-yaml": "3.6.1",
    "node-static": "0.7.7"
  },
  "_requested": {
    "name": "grunt-stubby",
    "raw": "grunt-stubby@^0.1.4",
    "rawSpec": "^0.1.4",
    "scope": null,
    "spec": ">=0.1.4 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-stubby/-/grunt-stubby-0.1.4.tgz",
  "_shasum": "b079fe75cd42c7c55b7187535f3b9f6e2accc704",
  "_shrinkwrap": null,
  "_spec": "grunt-stubby@^0.1.4",
  "_where": "/Users/Chau_Bin/Development/code/angular-ngroute-lab-v-000",
  "author": {
    "email": "tomas@aparicio.me",
    "name": "Tomas Aparicio",
    "url": "http://tomas.aparicio.me"
  },
  "bugs": {
    "url": "https://github.com/h2non/grunt-stubby/issues"
  },
  "dependencies": {
    "stubby": "~0.2.0"
  },
  "description": "A Grunt plugin for setting up a Stubby mock server based on YAML/JSON/JS configuration files",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-release": "~0.5.1",
    "supertest": "~0.7.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b079fe75cd42c7c55b7187535f3b9f6e2accc704",
    "tarball": "https://registry.npmjs.org/grunt-stubby/-/grunt-stubby-0.1.4.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/h2non/grunt-stubby",
  "keywords": [
    "gruntplugin",
    "mock",
    "server",
    "stubby",
    "stubs",
    "task"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/h2non/grunt-stubby/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "h2non",
      "email": "tomas@rijndael-project.com"
    }
  ],
  "name": "grunt-stubby",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# Grunt Stubby\n\n[![Build Status](https://travis-ci.org/h2non/grunt-stubby.png)](https://travis-ci.org/h2non/grunt-stubby)\n[![Dependency Status](https://gemnasium.com/h2non/grunt-stubby.png)](https://gemnasium.com/h2non/grunt-stubby)\n\n> A Grunt plugin for setting up a [Stubby](https://github.com/mrak/stubby4node) mock server based on YAML/JSON/JS configuration files\n\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-stubby --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-stubby');\n```\n\n## The \"stubby\" task\n\n### Usage Examples\n\n#### Default Options\n\n```js\ngrunt.initConfig({\n  stubby: {\n    stubsServer: {\n      // note the array collection instead of an object\n      files: [{\n        src: [ 'mocks/*.{json,yaml,js}' ]\n      }]\n    }\n  }\n})\n```\n\n#### Custom Options\n\n```js\ngrunt.initConfig({\n  stubby: {\n    stubsServer: {\n      options: {\n        callback: function (server, options) {\n          server.get(1, function (err, endpoint) {\n            if (!err)\n             console.log(endpoint);\n          });\n        },\n        stubs: 8000,\n        tls: 8443,\n        admin: 8010\n      },\n      // note the array collection instead of an object\n      files: [{\n        src: [ 'mocks/*.{json,yaml,js}' ]\n      }]\n    }\n  }\n})\n```\n\n### Options\n\n#### options.stubs\nType: `Number`\nDefault value: `8882`\n\nPort number to run the stubs portal\n\n#### options.tls\nType: `Number`\nDefault value: `7443`\n\nPort number to run the stubs portal over https\n\n#### options.admin\nType: `Number`\nDefault value: `8889`\n\nPort number to run the admin portal\n\n#### options.data\nType: `Array/Object`\nDefault value: `null`\n\nJavaScript Object/Array containing endpoint data.\nThis option will be automatically filled from the JSON/YAML config files, however you can additionally add a customized data\n\n#### options.location\nType: `String`\nDefault value: `localhost`\n\nAddress/hostname at which to run stubby\n\n#### options.relativeFilesPath\nType: `Boolean`\nDefault value: `false`\n\nWhen you use the 'file' property for the request/response config Objects, enabling this options\nthe data file path is relative to the the config file where it has been declared.\n\n#### options.key\nType: `String`\nDefault value: `null`\n\nPath to keyfile contents (in PEM format)\n\n#### options.cert\nType: `String`\nDefault value: `null`\n\nCertificate file path contents (in PEM format)\n\n#### options.pfx\nType: `String`\nDefault value: `null`\n\nPfx file path contents (mutually exclusive with key/cert options)\n\n#### options.watch\nType: `String`\nDefault value: `null`\n\nFilename to monitor and load as stubby's data when changes occur\n\n#### options.mute\nType: `Boolean`\nDefault value: `true`\n\nPass in false to have console output (if available)\n\n#### options.callback\nType: `Function`\nDefault value: `null`\n\nCallback function when the server starts successfully.\nThe passed arguments are:\n\n* `server` - The Stubby server instance object\n* `options` - The server config options object\n\n#### options.persistent\nType: `Boolean`\nDefault value: `false`\n\nRun the task in a persistent keep-alive server mode. Other tasks not will run until the Stubby server stops\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\n\nAdd unit tests for any new or changed functionality.\nLint and test your code using [Grunt](http://gruntjs.com/).\n\n### Testing\n\nClone the repository\n```shell\n$ git clone https://github.com/h2non/grunt-stubby.git && cd grunt-stubby\n```\n\nInstall dependencies\n```shell\n$ npm install\n```\n\nRun tests\n```shell\n$ npm test\n```\n\n## Release History\n\n* `0.1.4` 23.09.2013\n  - Added persisten task option\n* `0.1.3` 18.09.2013\n  - Added support to obtain relative paths from config file directory for the request/response data files\n* `0.1.2` 13.09.2013\n  - Added support to JavaScript sources configuration files\n  - Detect and use full paths\n* `0.1.1` 09.09.2013\n  - Removed basePath files option\n* `0.1.0` 01.09.2013\n  - Initial release\n\n## TODO\n\nYou miss something? Open an issue or PR!\n\n## License\n\nUnder [MIT](https://github.com/h2non/grunt-stubby/) license\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/h2non/grunt-stubby.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.1.4"
}
